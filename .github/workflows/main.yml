name: CI
on:
  pull_request:
  push:
    branches: [ master ]
jobs:
  ci:
    name: ci
    runs-on: ubuntu-18.04
    if: contains(github.event_name, 'pull_request')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.28

      - name: Terraform fmt
        id: fmt
        run: terraform fmt
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
#  apply:
#    name: terraform apply
#    runs-on: ubuntu-latest
#    if: contains(github.event_name, 'push')
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - name: configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1

#      - name: terraform setup
#        uses: hashicorp/setup-terraform@v1
#        with:
#          terraform_version: 0.12.28
#      - id: init
#        run: terraform init
#      - id: apply
#        run: terraform apply -auto-approve -no-color
#        env:
#          TF_VAR_do_token: ${{ secrets.TF_VAR_DO_TOKEN }}
